trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    # Preparar análisis de SonarCloud
    - task: SonarCloudPrepare@2
      inputs:
        SonarCloud: 'SonarCloud'  # Nombre de la conexión de servicio en Azure DevOps
        organization: 'shareyes1'  # Organización en SonarCloud
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'ShaReyes_pipelines-java'  # Clave del proyecto en SonarCloud
        cliProjectName: 'pipelines-java'  # Nombre del proyecto en SonarCloud
        cliProjectVersion: '1.0'  # Versión del proyecto (puedes ajustar este valor)
        extraProperties: |
          sonar.sources=src
          sonar.inclusions=**/azure-pipelines.yml
          sonar.java.binaries=target/classes
          sonar.coverage.jacoco.xmlReportPaths=$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml
          sonar.java.libraries # Incluir todas las librerías (JARs) en el análisis, no esta especificando donde dejar las dependencias empaquetadas

    # Ejecutar análisis de SonarCloud
    - task: SonarCloudAnalyze@2

    # Publicar resultados de SonarCloud
    - task: SonarCloudPublish@2
      inputs:
        pollingTimeoutSec: '300'

- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - script: echo "Building the application"
    
    # Additional build steps here
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'

- stage: Staging
  dependsOn: Build
  jobs:
  - job: DeployToStaging
    environment: 'Staging'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'drop'
    - script: echo "Deploying to Staging"
      # Here you would add the steps to deploy to your staging environment
      # This could include publishing the application, configuring settings, etc.

- stage: Test
  dependsOn: Staging
  jobs:
  - job: TestJob
    steps:
    - script: mvn test
    - task: PublishCodeCoverageResults@2
      inputs:
        codeCoverageTool: "JaCoCo"
        summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml"
        reportDirectory: "$(System.DefaultWorkingDirectory)/**/site/jacoco"
        failIfCoverageEmpty: true

- stage: Production
  dependsOn: Test
  jobs:
  - job: DeployToProduction
    environment: 'Production'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'drop'
    - script: echo "Deploying to Production"
      # Here you would add the steps to deploy to your production environment
      # This could include steps like applying configurations, starting services, etc.
